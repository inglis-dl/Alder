<org.obiba.magma.views.View>
  <name>Exam</name>
  <from class="org.obiba.magma.views.JoinTable">
    <list>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs.Participants</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.DualHipBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.LateralBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.WholeBodyBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.ForearmBoneDensity</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.RetinalScan</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.CarotidIntima</reference>
      </table>
      <table inner="false" class="org.obiba.magma.support.ValueTableReference">
        <reference>clsa-dcs-images.Plaque</reference>
      </table>
    </list>
  </from>
  <select class="org.obiba.magma.views.support.NoneClause"/>
  <where class="org.obiba.magma.views.support.AllClause"/>
  <variables class="org.obiba.magma.js.views.VariablesClause">
    <variables class="linked-hash-set">
      <variable name="CarotidIntima.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
  &apos;CarotidIntima&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/CarotidIntima.Stage</attribute>
        </attributes>
      </variable>
      <variable name="CarotidIntima.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.CarotidIntima:InstrumentRun.user&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/CarotidIntima.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="CarotidIntima.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.CarotidIntima:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/CarotidIntima.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="Plaque.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
   &apos;Plaque&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/Plaque.Stage</attribute>
        </attributes>
      </variable>
      <variable name="Plaque.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.Plaque:InstrumentRun.user&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/Plaque.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="Plaque.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.Plaque:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/Plaque.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="DualHipBoneDensity.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
  &apos;DualHipBoneDensity&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/DualHipBoneDensity.Stage</attribute>
        </attributes>
      </variable>
      <variable name="DualHipBoneDensity.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">// the user who ran the onyx bone density qnaire stage just before
// performing the dexa exam
//
var q=$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user&apos;).lowerCase()

// the user who ran the dexa image transfer to onyx, who may or may not
// be the same user who actually performed the exam
//
var hu=$(&apos;clsa-dcs-images.DualHipBoneDensity:InstrumentRun.user&apos;).lowerCase()
var a = new Array()
if(hu.isNull().not().value() &amp;&amp; a.indexOf(hu.value())&lt;0) a.push(hu.value())
var res=null
if(0&lt;a.length) {
  res=newValue(a.join(&apos;/&apos;))
  if(q.isNull().not().value() &amp;&amp; a.indexOf(q.value())&lt;0) {
    res=res.concat(&apos;/&apos;).concat(q)
  }
}
res</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/DualHipBoneDensity.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="DualHipBoneDensity.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.DualHipBoneDensity:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/DualHipBoneDensity.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="ForearmBoneDensity.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
  &apos;ForearmBoneDensity&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/ForearmBoneDensity.Stage</attribute>
        </attributes>
      </variable>
      <variable name="ForearmBoneDensity.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">// the user who ran the onyx bone density qnaire stage just before
// performing the dexa exam
//
var q=$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user&apos;).lowerCase()

// the user who ran the dexa image transfer to onyx, who may or may not
// be the same user who actually performed the exam
//
var fu=$(&apos;clsa-dcs-images.ForearmBoneDensity:InstrumentRun.user&apos;).lowerCase()
var a = new Array()
if(fu.isNull().not().value() &amp;&amp; a.indexOf(fu.value())&lt;0) a.push(fu.value())
var res=null
if(0&lt;a.length) {
  res=newValue(a.join(&apos;/&apos;))
  if(q.isNull().not().value() &amp;&amp; a.indexOf(q.value())&lt;0) {
    res=res.concat(&apos;/&apos;).concat(q)
  }
}
res</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/ForearmBoneDensity.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="ForearmBoneDensity.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.ForearmBoneDensity:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/ForearmBoneDensity.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="LateralBoneDensity.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
  &apos;LateralBoneDensity&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/LateralBoneDensity.Stage</attribute>
        </attributes>
      </variable>
      <variable name="LateralBoneDensity.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">// the user who ran the onyx bone density qnaire stage just before
// performing the dexa exam
//
var q=$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user&apos;).lowerCase()

// the user who ran the dexa image transfer to onyx, who may or may not
// be the same user who actually performed the exam
//
var lu=$(&apos;clsa-dcs-images.LateralBoneDensity:InstrumentRun.user&apos;).lowerCase()
var a = new Array()
if(lu.isNull().not().value() &amp;&amp; a.indexOf(lu.value())&lt;0) a.push(lu.value())
var res=null
if(0&lt;a.length) {
  res=newValue(a.join(&apos;/&apos;))
  if(q.isNull().not().value() &amp;&amp; a.indexOf(q.value())&lt;0) {
    res=res.concat(&apos;/&apos;).concat(q)
  }
}
res</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/LateralBoneDensity.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="LateralBoneDensity.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.LateralBoneDensity:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/LateralBoneDensity.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="RetinalScan.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
  &apos;RetinalScan&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/RetinalScan.Stage</attribute>
        </attributes>
      </variable>
      <variable name="RetinalScan.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.RetinalScan:InstrumentRun.user&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/RetinalScan.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="RetinalScan.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.RetinalScan:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/RetinalScan.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="WholeBodyBoneDensity.Stage" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$group(&apos;clsa-dcs.Participants:Admin.StageInstance.stage&apos;,
  &apos;WholeBodyBoneDensity&apos;,&apos;Admin.StageInstance.lastState&apos;).asSequence().last()</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/WholeBodyBoneDensity.Stage</attribute>
        </attributes>
      </variable>
      <variable name="WholeBodyBoneDensity.Interviewer" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">// the user who ran the onyx bone density qnaire stage just before
// performing the dexa exam
//
var q=$(&apos;clsa-dcs.QuestionnaireBoneDensity:QuestionnaireRun.user&apos;).lowerCase()

// the user who ran the dexa image transfer to onyx, who may or may not
// be the same user who actually performed the exam
//
var wu=$(&apos;clsa-dcs-images.WholeBodyBoneDensity:InstrumentRun.user&apos;).lowerCase()
var a = new Array()
if(wu.isNull().not().value() &amp;&amp; a.indexOf(wu.value())&lt;0) a.push(wu.value())
var res=null
if(0&lt;a.length) {
  res=newValue(a.join(&apos;/&apos;))
  if(q.isNull().not().value() &amp;&amp; a.indexOf(q.value())&lt;0) {
    res=res.concat(&apos;/&apos;).concat(q)
  }
}
res</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/WholeBodyBoneDensity.Interviewer</attribute>
        </attributes>
      </variable>
      <variable name="WholeBodyBoneDensity.DatetimeAcquired" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="0">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.WholeBodyBoneDensity:InstrumentRun.timeStart&apos;)</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/WholeBodyBoneDensity.DatetimeAcquired</attribute>
        </attributes>
      </variable>
      <variable name="CarotidIntima.Side" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="10">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {    
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
      }
    }  
  }  
  res=String(res.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/CarotidIntima.Side</attribute>
        </attributes>
      </variable>
      <variable name="Plaque.Side" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="10">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.Plaque:Measure.SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
      }    
    }  
  }  
  res=String(res.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/Plaque.Side</attribute>
        </attributes>
      </variable>
      <variable name="RetinalScan.Side" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="11">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.RetinalScan:Measure.SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
      }
    }
  }
  res=String(res.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/RetinalScan.Side</attribute>
        </attributes>
      </variable>
      <variable name="DualHipBoneDensity.Side" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="12">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.DualHipBoneDensity:Measure.OUTPUT_HIP_SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
      }
    }
  }
  res=String(res.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/DualHipBoneDensity.Side</attribute>
        </attributes>
      </variable>
      <variable name="ForearmBoneDensity.Side" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="9">
        <attributes>
          <attribute name="script" valueType="text">$(&apos;clsa-dcs-images.ForearmBoneDensity:OUTPUT_FA_SIDE&apos;).lowerCase()</attribute>
        </attributes>
      </variable>
      <variable name="CarotidIntima.SideIndex" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="10">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.CarotidIntima:Measure.SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  var index=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
        index=index.concat(String(i),delim)
      }
    }
  }  
  res=String(index.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/CarotidIntima.SideIndex</attribute>
        </attributes>
      </variable>
      <variable name="Plaque.SideIndex" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="10">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.Plaque:Measure.SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  var index=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
        index=index.concat(String(i),delim)
      }
    }
  }  
  res=String(index.value());
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/Plaque.SideIndex</attribute>
        </attributes>
      </variable>
      <variable name="DualHipBoneDensity.SideIndex" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="12">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.DualHipBoneDensity:Measure.OUTPUT_HIP_SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  var index=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
        index=index.concat(String(i),delim)
      }
    }
  }
  res=String(index.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/DualHipBoneDensity.SideIndex</attribute>
        </attributes>
      </variable>
      <variable name="RetinalScan.SideIndex" valueType="text" entityType="Participant" unit="" mimeType="" referencedEntityType="" index="11">
        <attributes>
          <attribute name="script" valueType="text">var sides=$(&apos;clsa-dcs-images.RetinalScan:Measure.SIDE&apos;).lowerCase()
if(sides.isNull().not().value()) {
  var delim=newValue(&apos;,&apos;)
  var res=newValue(&apos;&apos;)
  var index=newValue(&apos;&apos;)
  for(var i=0;i&lt;sides.size().value();i++) {
    if(sides.valueAt(i).isNull().not().value()) {
      var side=sides.valueAt(i).value()
      if(res.matches(RegExp(side)).not().value()) {
        res=res.concat(side,delim)
        index=index.concat(String(i),delim)
      }
    }
  }
  res=String(index.value())
  res.slice(0,res.length-1)
} else {
  null
}</attribute>
          <attribute name="derivedFrom" namespace="opal" valueType="text">/datasource/alder/table/Exam/variable/RetinalScan.SideIndex</attribute>
        </attributes>
      </variable>
    </variables>
  </variables>
  <created valueType="datetime">2018-01-02T14:34:00.686-05</created>
  <updated valueType="datetime">2018-07-03T13:35:35.578-04</updated>
</org.obiba.magma.views.View>